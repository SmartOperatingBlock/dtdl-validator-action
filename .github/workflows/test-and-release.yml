name: Test and Release

on:
  push:
    paths-ignore:
        - 'CHANGELOG.md'
        - 'LICENSE'
        - 'README.md'
        - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout the action
        uses: actions/checkout@v3
        with:
          path: action
          submodules: recursive
          fetch-depth: 0
      - uses: ./action
        with:
          folder: example
          recursive: true

  release:
    concurrency:
        # Allow only one release at a time.
        group: release-${{ github.event.number || github.ref }}
    needs:
      - test
    runs-on: ubuntu-latest
    # Release only where secrets are available.
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
          submodules: recursive
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        run: |
          npm install
          npx semantic-release

  success:
      runs-on: ubuntu-22.04
      needs:
        - test
        - release
      if: >-
        always() && (
          contains(join(needs.*.result, ','), 'failure')
          || !contains(join(needs.*.result, ','), 'cancelled')
        )
      steps:
        - name: Verify that there were no failures
          run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
